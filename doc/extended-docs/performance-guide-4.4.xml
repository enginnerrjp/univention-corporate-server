<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
	<!ENTITY % extensions SYSTEM "../stylesheets/macros.ent" >
	<!ENTITY % entities SYSTEM "../stylesheets/macros-en.ent" >
	%extensions;
	%entities;
]>
<book lang="en" id="performance-guide-4.4">

<bookinfo>
  <title>Univention Corporate Server</title>
  <subtitle>Performance guide</subtitle>
</bookinfo>

<chapter id="intro">
	<title>Introduction</title>
	<para>
		In its default configuration, UCS is suitable for environments with up to
		5,000 users.
	</para>
	<para>
		This document describes configuration modifications which can increase
		performance in larger environments.
	</para>
	</chapter>

<chapter id="slapd">
	<title>OpenLDAP and listener/notifier domain replication</title>
	<para>
		As a core element in the operation and administration of a UCS domain, the
		performance of the LDAP server plays a central role in the overall performance.
	</para>

	<section id="slapd:index">
		<title>Indexes</title>
		<para>
			Comparable with other database systems, OpenLDAP runs indexes about commonly
			requested attributes. For indexed attributes, a search is not performed via the
			full database contents, but over an optimized subsection.
		</para>
		<para>
			With newer UCS versions, the indexes are occasionally expanded and automatically
			activated. The automatic activation can be deactivated using the UCR variable
			<envar>ldap/index/autorebuild</envar>. In this case, the indexes should be set
			manually to ensure that there is no loss of performance as a result. The indexes
			are controlled by the UCR variables <envar>ldap/index/eq</envar>,
			<envar>ldap/index/pres</envar>, <envar>ldap/index/sub</envar> and
			<envar>ldap/index/approx</envar>. Once the variables have been changed, the
			OpenLDAP server must be stopped and the <command>slapindex</command> command run.
		</para>
		<para>
			To determine whether not-indexed variables are used, you can activate OpenLDAP
			debug level -1 and search for the string 'not indexed' in the log file
			<filename>/var/log/syslog</filename>. For example:
			<programlisting language="sh">
ucr set ldap/debug/level=-1
invoke-rc.d slapd restart
grep 'not indexed' /var/log/syslog
			</programlisting>
		</para>
	</section>

	<section id="slapd:bdb">
		<title>Configuration of the database backend</title>
		<para>
			The memory mapped database (MDB) has been used for new installations since UCS
			4.0. If BDB is still in use, a migration to MDB should be performed for amd64 systems (not i386).
			The database backend can be controlled via the UCR variable
			<envar>ldap/database/type</envar>. A migration can be performed as follows:
			<programlisting language="sh">
/etc/init.d/slapd stop
slapcat -l ldif
mkdir /var/lib/univention-ldap/ldap.BACKUP
mv /var/lib/univention-ldap/ldap/* /var/lib/univention-ldap/ldap.BACKUP
ucr set ldap/database/type=mdb
slapadd -l ldif
/etc/init.d/slapd start
			</programlisting>
			In the default configuration the memory mapped database needs more I/O operations than
			the BDB backend. With the &ucsUCRV; <envar>ldap/database/mdb/envflags</envar> this
			behavior can be configured. The following flags can be set (multiple values are
			separated by spaces):
			<itemizedlist>
				<listitem><simpara>
					<option>nosync</option> specify that on-disk  database contents should not be
					immediately synchronized with in memory changes. Enabling
					this option may improve performance at the expense of data security. In
					particular, if the operating system crashes before changes are flushed, some
					number of transactions may be lost.  By default, a full data flush/sync is
					performed when each transaction is committed.
				</simpara></listitem>
				<listitem><simpara>
					<option>nometasync</option> Flush the data on a commit, but
					skip the sync of the meta page. This mode is slightly faster than doing a full
					sync, but can potentially lose the last committed transaction if the operating
					system crashes. If both <option>nometasync</option> and <option>nosync</option> are set, the <option>nosync</option> flag takes
					precedence.
				</simpara></listitem>
				<listitem><simpara>
					<option>writemap</option> Use a writable memory map instead of
					just read-only. This speeds up write operations but makes the database
					vulnerable to corruption in case any bugs in <systemitem class="daemon">slapd</systemitem> cause stray writes into the
					memory mapped region.
				</simpara></listitem>
				<listitem><simpara>
					<option>mapasync</option> When using a writable memory map and
					performing flushes on each commit, use an asynchronous flush instead of a
					synchronous flush (the default). This option has no effect if <option>writemap</option> has not
					been set. It also has no effect if <option>nosync</option> is set.
				</simpara></listitem>
				<listitem><simpara>
					<option>nordahead</option> Turn  off  file  read-ahead.
					Usually  the OS performs read-ahead on every read request. This usually boosts
					read performance but can be harmful to random access read performance if the
					system's memory is full and the DB is larger than RAM.
				</simpara></listitem>
			</itemizedlist>
		</para>
	</section>

	<section id="slapd:acl">
		<title>OpenLDAP ACLs</title>
		<para>
			Access to the information contained in the LDAP directory is controlled by
			access control lists (ACLs) on the server side. General information on the
			configuration of ACLs in UCS can be found in the LDAP chapter of the <biblioref linkend="ucs-manual"/>.
		</para>
		<para>
			Nested groups are also supported. The &ucsUCRV;
			<envar>ldap/acl/nestedgroups</envar> can be used to deactivate the nested
			groups function for LDAP ACLs, which will result in a speed increase for
			directory requests.
		</para>
	</section>

	<section id="listener">
		<title>Univention Directory Listener</title>
		<para>
			The Univention Directory Listener can perform safety
			checks to prevent a user name being added into a group twice.
			These checks add some overhead to replication and can
			be deactivated by setting the &ucsUCR; variables
			<envar>listener/memberuid/skip</envar> and
			<envar>listener/uniquemember/skip</envar> to <literal>no</literal>.
			Starting with UCS 3.1 the variables are not set and the checks are
			not activated any longer by default.
		</para>
	</section>
</chapter>

<chapter id="nscd">
	<title>Name Service Cache Daemon (NSCD)</title>
	<para>
		Name resolutions can be cached by the <emphasis>Name Service Cache
		Daemon</emphasis> (NSCD) in order to speed up frequently recurring requests for
		unchanged data. Thus, if a repeated request occurs, instead of querying the
		LDAP server, the data are simply drawn directly from the cache.
	</para>
	<para>
		The size of the cache held by the NSCD is preconfigured for an environment with
		5,000 users. If more users or hosts are created, the cache
		should be enlarged as otherwise it will not be possibly to cache enough
		entries.
	</para>
	<para>
		The following &ucsUCR; variables can be set:
	</para>
	<itemizedlist>
		<listitem>
			<simpara>
			<envar>nscd/hosts/size</envar> should be at least the same as the number
			of all the computers entered in the DNS.
			</simpara>
		</listitem>
		<listitem>
			<simpara>
			<envar>nscd/passwd/size</envar> should be at least the same as the number
			of users.
			</simpara>
		</listitem>
	</itemizedlist>
	<para>
		To allow an efficient cache allocation, the value selected should always be a
		prime number, in case of doubt the next highest prime number should be
		selected.
	</para>
	<para>
		A script can be downloaded from
		<ulink url="https://updates.software-univention.de/download/scripts/nscdCachesize.sh"/>
		which suggests corresponding values based on the objects currently included in
		the system.
	</para>
</chapter>

<chapter id="join">
	<title>Performance issues during the join process</title>
	<para>
		The size of the UCS domain can have an impact on the duration of the join process.
		Here is some information how to deal with such problems.
	</para>
	<section id="join:samba">
		<title>Samba</title>
		<para>
			One of the join scripts for samba requires that the samba connector has synchronized
			all domain objects into samba. This script has a timeout of 3h (from UCS 4.4-7 on).
			This is sufficient for normal sized environments. But in large environments this
			script may hit the timeout and abort the join process.
			To increase the timeout the &ucsUCRV; <envar>create/spn/account/timeout</envar>
			can be set prior to the join process.
		</para>
	</section>
</chapter>

<chapter id="group:cache">
	<title>Local group cache</title>

	<para>
		In the default setting, the group cache is regenerated every time changes are
		made to a group. This avoids cache effects whereby group memberships only
		become visible for a service after the next scheduled group
		cache rewrite (in the default setting after 15 minutes and
		after 15 seconds of inactivity in the &ucsUDL;. In
		larger environments with a lot of group changes, this function should be
		deactivated by setting the &ucsUCRV;
		<envar>nss/group/invalidate_cache_on_changes</envar> to
		<literal>false</literal>. This setting takes effect immediately and does not
		require a restart of the Univention Directory Listener.
	</para>

	<para>
	  When the group cache file is being generated, the script verifies whether the group members
	  are still present in the LDAP directory. If only the &ucsUMC; is used for the management of
	  the LDAP directory, this additional check is not necessary and can be disabled by setting the
	  &ucsUCRV; <envar>nss/group/cachefile/check_member</envar> to <literal>false</literal>.
	</para>

</chapter>


<chapter id="umc">
  <title>UCS management system</title>

  <section id="umc:search:auto">
	<title>Disabling automatic search</title>
	<para>
	  By default all objects are automatically searched for in the domain management
	  modules of the &ucsUMC;. This behavior can be disabled by setting the
	  &ucsUCRV; <envar>directory/manager/web/modules/autosearch</envar> to
	  <literal>0</literal>.
	</para>
  </section>

  <section id="umc:search:limit">
	<title>Imposing a size limit for searches</title>
	<para>
	  The &ucsUCRV; <envar>directory/manager/web/sizelimit</envar> is used to impose an upper limit
	  for search results. If, e.g., this variable is set to 2000 (as is the default), searching for
	  more than 2000 users would not be performed and instead the user is asked to refine the
	  search.
	</para>
  </section>
  <section id="umc:open_file:limit">
	<title>Adjusting the limit on open file descriptors</title>
	<para>
	  The &ucsUCRV; <envar>umc/http/max-open-file-descriptors</envar> is used to impose an upper limit
	  on open file descriptors of the <package>univention-management-console-web-server</package>.
	  The default is 65535.
	</para>
  </section>
  <section id="umc:performance:multiprocessing">
	  <title>Vertical performance scalling</title>
	  <para>
		  A single &ucsUMC; instance does not use multiple CPU cores by design, therefore it can be beneficial to start
		  multiple instances.
		  Set the following &ucsUCRV; <envar>umc/server/processes</envar> and &ucsUCRV; <envar>umc/http/processes</envar>
		  and restart the &ucsUMC;:
		  <programlisting language="sh">
			  systemctl restart univention-management-console-web-server
			  systemctl restart univention-management-console-server
			  systemctl restart apache2
		  </programlisting>
		  The number of instances to configure depends on the workload and the server system. As a general rule of thumb
		  these should not be higher as the machines CPU cores minus 4.
</chapter>


<chapter id="services">
	<title>Further services and components</title>
	<section id="squid">
		<title>Squid</title>
		<para>
			If the Squid proxy service is used with NTLM authentication,
			up to five running NTLM requests can be processed in parallel.
			If many proxy requests are received in parallel, the
			Squid user may occasionally receive an authentication error. The number
			of parallel NTLM authentication processes can be configured with
			the &ucsUCRV; <envar>squid/ntlmauth/children</envar>.
		</para>
	</section>

	<section id="bind">
		<title>BIND</title>
		<para>
		  BIND can use two different backends for its configuration: OpenLDAP or the internal LDB
		  database of Samba 4. The backend is configured via the &ucsUCRV;
		  <envar>dns/backend</envar>. On domain controllers running Samba4, the backend must not be changed to OpenLDAP.
		</para>

		<para>
		  When using the Samba backend, a search is performed in the LDAP for every DNS
		  request. With the OpenLDAP backend, a search is only performed in the directory service if
		  the DNS data has changed. For this reason, using the OpenLDAP backend can reduce the load
		  on a Samba 4 domain controller.
		</para>
	</section>

	<section id="kernel">
		<title>Kernel</title>
		<para>
			In medium and larger environments the maximum number of open files allowed by the Linux kernel may be set too low by default.
			As each instance requires some unswappable memory in the Linux kernel, too many objects may lead to a resource depletion and denial-of-service problems in multi-user environments.
			Because of that the number of allowed file objects is limited by default.
		</para>
		<para>
			The maximum number of open files can be configured on a per-user or per-group basis.
			The default for all users can be set through the following &ucsUCRV;s:
		</para>
		<variablelist>
			<varlistentry>
				<term><envar>security/limits/user/<replaceable>default</replaceable>/hard/nofile</envar></term>
				<listitem>
					<simpara>
						The hard limit defines the upper limit a user can assign to a process.
						The default is 32768.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><envar>security/limits/user/<replaceable>default</replaceable>/soft/nofile</envar></term>
				<listitem>
					<simpara>
						The soft limit defines the default settings for the processes of the user.
						The default is 32768.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			A similar problem exists with the <wordasword>Inotify</wordasword> sub-system of the kernel, which can be used by all users and  applications to monitor changes in file systems.
		</para>
		<variablelist>
			<varlistentry>
				<term><envar>kernel/fs/inotify/max_user_instances</envar></term>
				<listitem>
					<simpara>
						The upper limit of inotify services per user ID.
						The default is 511.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><envar>kernel/fs/inotify/max_user_watches</envar></term>
				<listitem>
					<simpara>
						The upper limit of files per user which can be watched by the inotify service.
						The default is 32767.
					</simpara>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><envar>kernel/fs/inotify/max_queued_events</envar></term>
				<listitem>
					<simpara>
						The upper limit of queued events per inotify instance.
						The default is 16384.
					</simpara>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>

	<section id="samba">
		<title>Samba</title>
		<para>
			Samba uses its own mechanism to specify the maximum number of open files.
			This can be configured through the &ucsUCRV; <envar>samba/max_open_files</envar>.
			The default is 32808.
		</para>
		<para>
			If the log file <filename>/var/log/samba/log.smbd</filename> contains errors
			like <computeroutput>Failed to init inotify - Too many open
			files</computeroutput>, the kernel and Samba limits should be increased and the
			services should be restarted.
		</para>
	</section>

	<section id="systemstats">
		<title>System statistics</title>
		<para>
			The log file <filename>/var/log/univention/system-stats.log</filename> can be
			checked for further performance analyses. The system status is logged every 30
			minutes. If more regular logging is required, it can be controlled via the UCR
			variable <envar>system/stats/cron</envar>.
		</para>
	</section>

	<section id="dovecot::highperformance">
		<title>Dovecot high-performance mode</title>
		<para>
			&ucsUCS; configures Dovecot to run in "High-security mode" by default.
			Each connection is served by a separate login process.
			This security has a price: for each connection at least two processes must run.
		</para>
		<para>
			Thus installations with 10.000s of users hit operating system boundaries.
			For this case Dovecot offers the "High-performance mode".
			To activate it, login processes are allowed to serve more than one connection.
			To configure this run
<programlisting language="sh">
ucr mail/dovecot/limits/imap-login/service_count=0
</programlisting>
			If <literal>client_limit=1000</literal> and <literal>process_limit=100</literal> are set, only 100 login processes are started, but each serves up to 1000 connections &ndash; a total of 100.000 connections.
		</para>
		<para>
			The cost of this is that if a login process is compromised, an attacker might read the login credentials and emails of all users this login process is serving.
		</para>
		<para>
			To distribute the load of the login processes evenly between CPU cores, <envar>mail/dovecot/limits/imap-login/process_min_avail</envar> should be set to the number of CPU cores in the system.
		</para>
	</section>
</chapter>

	<bibliography id="bibliography">
		<bibliomixed id="ucs-manual"/>
	</bibliography>
</book>
